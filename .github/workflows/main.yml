name: Build+Deploy

on: 
  push:
    branches: 
      - master

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.4
    - name: Cache Composer dependencies
      uses: actions/cache@v2
      with:
        path: /tmp/composer-cache
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - run: composer install --no-dev
      working-directory: backend/lib
    - uses: actions/upload-artifact@v2
      with:
        name: backend
        path: backend

  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14
    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - run: npm install
      working-directory: frontend
    - run: npm run build:prod
      working-directory: frontend
    - uses: actions/upload-artifact@v2
      with:
        name: frontend
        path: frontend/dist/frontend

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: frontend
        path: artifact/wwwroot
    - uses: actions/download-artifact@v2
      with:
        name: backend
        path: artifact/wwwroot
    - uses: cschleiden/replace-tokens@v1
      name: Fill in production settings
      with:
        files: '["artifact/wwwroot/conf/Settings.php"]'
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DATABASE: ${{ secrets.DB_DATABASE }}
    - name: Upload artifacts to target server
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USERNAME: ${{ secrets.DEPLOY_USERNAME }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        echo "$DEPLOY_KEY" > /tmp/tmp_id_rsa
        chmod 600 /tmp/tmp_id_rsa
        rsync --delete -r -e "ssh -o StrictHostKeyChecking=no -i /tmp/tmp_id_rsa" artifact/wwwroot/ $DEPLOY_USERNAME@$DEPLOY_HOST:/data/sites/web/drentsheideschaapnl/subsites/nieuw.drentsheideschaap.nl
        rm /tmp/tmp_id_rsa
